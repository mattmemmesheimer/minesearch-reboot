using System.Collections.Generic;

namespace MineSearch.Common
{
    /// <summary>
    /// Concrete implementation of <see cref="IRandomPointGenerator"/>.
    /// This class is used for testing purposes and thus does not use any randomness.
    /// The points generated by this class are provided in the constructor.
    /// </summary>
    public class MockRandomPointGenerator : BaseRandomPointGenerator
    {
        /// <summary>
        /// Initializes a new instance of <see cref="MockRandomPointGenerator"/>.
        /// </summary>
        /// <param name="points">List of points to be generated.</param>
        public MockRandomPointGenerator(IList<Point> points)
        {
            _points = points;
            _currentIndex = 0;
        }

        /// <summary>
        /// Generates a random point.
        /// </summary>
        /// <param name="maxRow">Maximum row.</param>
        /// <param name="maxColumn">Maximum column.</param>
        /// <returns>Random point.</returns>
        public override Point Generate(int maxRow, int maxColumn)
        {
            if (_currentIndex == _points.Count)
            {
                _currentIndex = 0;
            }
            return _points[_currentIndex++];
        }

        #region Fields

        private readonly IList<Point> _points;
        private int _currentIndex;

        #endregion
    }
}
